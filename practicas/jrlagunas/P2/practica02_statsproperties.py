# -*- coding: utf-8 -*-
"""practica02_statsproperties.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19HMbE4rJq-A8hnu8V4zX6mamEObiizSl

## Pr√°ctica 2: Propiedades estad√≠sticas de la lengua

### Fecha de entrega: 2 de Marzo de 2025 11:59pm

### 1. Verificar si la ley de Zipf se cumple en un lenguaje artificial creado por ustedes
"""

import random
import string
import numpy as np
import matplotlib.pyplot as plt
from collections import Counter
import pandas as pd

# Devuelve una palabra compuesta de caracteres aleatorios.
def crear_palabra(long_min=4, long_max=10):
    longitud = random.randint(long_min, long_max)
    return ''.join(random.choices(string.ascii_lowercase, k=longitud))

vocabulario = [crear_palabra() for _ in range(5000)]

corpus = ' '.join(random.choices(vocabulario, k=100000))

conteo = Counter(corpus.split())
df_frecuencias = pd.DataFrame(conteo.items(), columns=["palabra", "frecuencia"])
df_frecuencias = df_frecuencias.sort_values(by="frecuencia", ascending=False).reset_index(drop=True)
print(df_frecuencias.head())

plt.figure(figsize=(10,5))
plt.plot(df_frecuencias["frecuencia"].values, marker="o")
plt.title("Ley de Zipf")
plt.xlabel("Rango")
plt.ylabel("Frecuencia")
plt.show()

plt.figure(figsize=(10,5))
plt.loglog(df_frecuencias["frecuencia"].values, marker=".")
plt.title("Ley de Zipf(escala log-log)")
plt.xlabel("log(rango)")
plt.ylabel("log(frecuencia)")
plt.show()

"""En el lenguaje artificial generado aleatoriamente, se observa que la distribuci√≥n de frecuencias no sigue exactamente la ley de Zipf. Aunque las palabras m√°s frecuentes son evidentemente m√°s comunes, la relaci√≥n entre el rango y la frecuencia no muestra la pendiente empinada caracter√≠stica de lenguajes naturales. Esto ocurre porque, en este experimento, las palabras se distribuyen de forma completamente aleatoria y no existen patrones sem√°nticos o gramaticales que provoquen que ciertas palabras predominen sobre otras. As√≠, el resultado refleja una distribuci√≥n m√°s uniforme y menos jer√°rquica que la esperada seg√∫n Zipf.

### Ejercicio 2

2. Explorar `datasets` del sitio [Hugging Face](https://huggingface.co/datasets) y elegir documentos de diferentes dominios en Espa√±ol (al menos 3). Realizar reconocimiento de entidades nombradas (NER).
    - Pueden utilizar subconjuntos de los datasets encontrados
    - Mostrar resultados del reconocimiento
    - Una distribuci√≥n de frecuencias de las etiquetas m√°s comunes en cada dominio
    - Comentarios generales del desempe√±o observado.
"""

from datasets import load_dataset
import pandas as pd
import spacy
from collections import Counter
import matplotlib.pyplot as plt

import es_core_news_md
nlp = es_core_news_md.load()

import glob

ruta_archivos_json = "./"
archivos_json = glob.glob(ruta_archivos_json + "es_*.json")
dfs_json = [pd.read_json(archivo, lines=True) for archivo in archivos_json]
df_noticias = pd.concat(dfs_json, ignore_index=True)
print("‚úÖ DataFrame de Noticias (JSON) cargado con shape:", df_noticias.shape)

df_finanzas = pd.read_parquet("./finanzas.parquet")
print("‚úÖ DataFrame de Finanzas (Parquet) cargado con shape:", df_finanzas.shape)

def extraer_entidades(textos):
    """
    Extrae entidades nombradas de una lista de textos usando spaCy.
    Retorna una lista de (etiqueta, texto).
    """
    entidades = []
    for doc in nlp.pipe(textos, disable=["parser", "tagger"]):
        entidades.extend([(ent.label_, ent.text) for ent in doc.ents])
    return entidades

# Procesamiento de cada dominio

# Financiero
columna_texto_fin = "text" if "text" in df_finanzas.columns else df_finanzas.columns[0]
entidades_fin = extraer_entidades(df_finanzas[columna_texto_fin].dropna().tolist())

def graficar_distribucion(entidades, titulo):
    etiquetas = [label for label, _ in entidades]
    conteo = Counter(etiquetas)

    df = pd.DataFrame(conteo.items(), columns=["Etiqueta", "Frecuencia"]).sort_values(by="Frecuencia", ascending=False)

    plt.figure(figsize=(8,5))
    plt.bar(df["Etiqueta"], df["Frecuencia"], color="skyblue")
    plt.title(f"Frecuencia de entidades - {titulo}")
    plt.xlabel("Etiqueta")
    plt.ylabel("Frecuencia")
    plt.show()

    return df

df_fin = graficar_distribucion(entidades_fin, "Finanzas")

print("\nüîµ Ejemplo de entidades en Finanzas:", entidades_fin[:10])

"""### Conclusi√≥n del an√°lisis de entidades nombradas en el dominio financiero

En finanzas, el modelo de reconocimiento de entidades nombradas (NER) mostr√≥ un buen desempe√±o general. Las entidades m√°s destacadas fueron:

- **MISC**: Agrupando categor√≠as diversas, alcanz√≥ la mayor frecuencia. Esto puede indicar que el modelo reconoce correctamente muchos t√©rminos relevantes, pero tambi√©n puede incluir cierta confusi√≥n al clasificar t√©rminos ambiguos como "miscellaneous".
- **ORG (Organizaciones)**: Fue la segunda categor√≠a m√°s frecuente, lo cual es totalmente coherente con la naturaleza de los textos financieros, que suelen mencionar nombres de instituciones, empresas y entidades bancarias.
- **LOC (Ubicaciones geogr√°ficas)**: Aunque menos frecuente, sigue presente, reflejando la referencia a ciudades, pa√≠ses y zonas importantes en reportes y datos financieros.
- **PER (Personas)**: Su frecuencia fue significativamente menor. Esto se espera, ya que los textos financieros tienden a centrarse m√°s en instituciones y transacciones que en individuos.

---

**Aspectos destacados:**
- La **alta frecuencia de MISC y ORG** confirma que el modelo est√° detectando bien los actores clave en textos financieros: empresas, bancos y entidades relacionadas.  
- La presencia de **LOC** sugiere que la dimensi√≥n geogr√°fica tambi√©n est√° cubierta en reportes o textos donde se mencionan mercados internacionales o sedes.  
- La categor√≠a **PER** es menos relevante en estos textos, lo que concuerda con el enfoque institucional y macroecon√≥mico del dominio financiero.

---

**Reflexi√≥n final:**
En conjunto, este an√°lisis muestra c√≥mo un sistema NER b√°sico puede adaptarse a distintos dominios y extraer informaci√≥n clave para tareas de miner√≠a de texto en el √°mbito financiero.

"""

